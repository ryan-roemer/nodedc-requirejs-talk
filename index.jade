extends layout

block slides

  section.slide#title
    h1 Shared Code with AMD/RequireJS

  section.slide#amd
    :markdown
      ## Asynchronous Module Definition

      The [Asynchronous Module Definition][amd] (*AMD*) specification provides
      a framework for defining JavaScript modules and dependencies for
      predictable loading.

      * A fork of / transport for [CommonJS][cjs]
      * Brings `require`-like support to the frontend.

      [amd]: https://github.com/amdjs/amdjs-api/wiki/AMD
      [cjs]: http://www.commonjs.org/

  section.slide#why
    :markdown
      ## Why AMD?

      * Frontend JavaScript dependencies are a mess.
      * Allow us the real potential to have **shared** code between the
        frontend and a backend Node.js server.

  section.slide#sample-code
    :markdown
      ## Shuffle!

      Looks like a basic Node.js backend function with a dependency on
      [underscore][underscore].

      [underscore]: http://underscorejs.org/

    textarea.code#code(name="code", mode="javascript", style="display: none;").
      var _ = require('underscore');

      // Shuffle a list string.
      var shuffle = function (val) {
        val = val || "";
        return _.shuffle(val.split(/[\s,]+/));
      };
    //-

  section.slide#require-nodejs
    :markdown
      ## Prep for AMD

      Use the [amdefine][amdefine] module in a standard boilerplate and
      wrap our module in a `define`.

      [amdefine]: https://github.com/jrburke/amdefine

    textarea.code#code(name="code", mode="javascript", style="display: none;").
      if (typeof define !== 'function') {
        var define = require('amdefine')(module);
      }

      define(function(require) {
        var _ = require('underscore');

        return function shuffle(val) {
          val = val || "";
          return _.shuffle(val.split(/[\s,]+/));
        };
      });
    //-

  section.slide#express
    :markdown
      ## Express REST API

      Let's create a JSON [REST API][api] with our new function.

      [api]: http://127.0.0.1:3003/shuffle?val=1+2+3+4+5

    textarea.code#code(name="code", mode="javascript", style="display: none;").
      // At the top...
      var shuffle = require('../lib-shared/shuffle');

      // ... meanwhile, in our Express setup.
      app.get("/shuffle", function (req, res) {
        var input = req.param('val'),
          shuffled = shuffle(input);

        return res.json(shuffled, 200);
      });
    //-

  section.slide#require
    :markdown
      ## RequireJS

      [RequireJS][requirejs] is an AMD-compatible script loader (and much
      more) with features including:

      * Sensible **module definition** format
      * **Asynchronous** script loading
      * Frontend asset **bundling**
      * **Plugins**: Internationalization, text (templates)
      * **Node.js** compatibility

      We will use this as our bridge to the frontend.

      [requirejs]: http://requirejs.org/

  section.slide#require-frontend
    :markdown
      ## RequireJS on the Frontend

      TODO - HERE

      * Match version dependencies (underscore).

      * Module definitions
      * Data main starting point
      * Configuration

  section.slide#require-data-main
    :markdown
      ## RequireJS Main

      Let's start with a main insertion point.

      TODO

  section.slide#require-client-integration
    :markdown
      ## TODO

      TODO


  section.slide#other-resources
    :markdown
      ## TODO

      TODO

  section.slide#extra
    :markdown
      ## Extra Notes

      TODO: HERE -- basics and outline rest.

      * Basic syntax.
      * RequireJS on the frontend.
      * RequireJS on the backend.
      * Shared code.
      * Bundling.
      * Plugins.
      * Curiosity Media use cases.
        * Validation
        * Internationalization

      * [jsplayground]: http://javascriptplayground.com/blog/2012/07/requirejs-amd-tutorial-introduction


