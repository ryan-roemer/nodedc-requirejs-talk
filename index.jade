extends layout

block slides

  section.slide#title
    h1 Shared Code with AMD/RequireJS

  section.slide#amd
    :markdown
      ## Asynchronous Module Definition

      The [Asynchronous Module Definition][amd] (*AMD*) specification provides
      a framework for defining JavaScript modules and dependencies for
      predictable loading.

      * A fork of / transport for [CommonJS][cjs]
      * Brings `require`-like support to the frontend.

      [amd]: https://github.com/amdjs/amdjs-api/wiki/AMD
      [cjs]: http://www.commonjs.org/

  section.slide#why
    :markdown
      ## Why AMD?

      * Frontend JavaScript dependencies are a mess.
      * Allow us the real potential to have **shared** code between the
        frontend and a backend Node.js server.

  section.slide#demo
    :markdown
      ## Our Project

      Let's start with a small project:

          lib-shared/shuffle.js
          lib-server/server.js
          lib-client/main.js

      And some modules in `package.json` for our Node.js server:

          "express":    "3.0.2",
          "amdefine":   "0.0.2",
          "underscore": "1.4.2"

  section.slide#sample-code
    :markdown
      ## Shuffle!

      Our function looks like a basic Node.js backend function with a
      dependency on [underscore][underscore].

      [underscore]: http://underscorejs.org/

    textarea.code#code(name="code", mode="javascript",
                       runnable="true", globals="_", style="display: none;").
      // Shuffle a list string.
      function shuffle (val) {
        val = val || "";
        return _.shuffle(val.split(/[\s,]+/));
      };

      // Examples
      console.log(shuffle("1 2 3 4"));
    //-


  section.slide#amd-wrap
    :markdown
      ## Wrap Shared Code

      Add [amdefine][amdefine] module boilerplate to get `define` ready for
      Node.js/browser in "lib-shared/shuffle.js":

      [amdefine]: https://github.com/jrburke/amdefine

    textarea.code#code(name="code", mode="javascript", style="display: none;").
      if (typeof define !== 'function') {
        var define = require('amdefine')(module);
      }

      define(function(require) {
        var _ = require('underscore');

        return function shuffle(val) {
          val = val || "";
          return _.shuffle(val.split(/[\s,]+/));
        };
      });
    //-

  section.slide#express
    :markdown
      ## Express REST API

      Let's create a JSON [REST API][api] with our new function.

      [api]: http://127.0.0.1:3003/shuffle?val=1+2+3+4+5

    textarea.code#code(name="code", mode="javascript", style="display: none;").
      // At the top, a standard Node.js require ...
      var shuffle = require('../lib-shared/shuffle');

      // ... meanwhile, in our Express setup.
      app.get("/shuffle", function (req, res) {
        var input = req.param('val'),
          shuffled = shuffle(input);

        return res.json(shuffled, 200);
      });
    //-

  section.slide#require
    :markdown
      ## RequireJS

      *Now, on to the browser...*

      [RequireJS][requirejs] is an AMD-compatible script loader with features
      including:

      * **Asynchronous** script loading
      * Frontend asset **bundling**
      * **Plugins**: Internationalization, text (templates)

      [requirejs]: http://requirejs.org/

  section.slide#require-data-main
    :markdown
      ## RequireJS Main

      Let's start with a main insertion point. (The are *no other* script
      includes!)

    textarea.code#code(name="code", mode="xml", style="display: none;").
      <script data-main="./lib-client/main"
              src="./lib-client/vendor/require-2.1.1.js"
              type="text/javascript"></script>
    //-
    p

    :markdown
      From here on, there are *no other* script includes!

  section.slide#require-config
    :markdown
      ## RequireJS Configuration

      Configure "lib-client/main.js" to point to our client libraries.

    textarea.code#code(name="code", mode="javascript", style="display: none;").
      require.config({
        shim: {
          "underscore": { exports: "_" },
          "bootstrap": {
            deps: ["jquery"],
            exports: "$"
          }
        },
        paths: {
          "underscore": "vendor/underscore-min-1.4.2",
          "jquery":     "vendor/jquery-min-1.8.1",
          "bootstrap":  "vendor/bootstrap-min-2.2.1"
        },
      });
    //-

  section.slide#client
    :markdown
      ## Shuffle in the Browser

      From here, we can `define` our client-side JavaScript code and
      see it in the [demo][demo].

      [demo]: http://127.0.0.1:3003/

    textarea.code#code(name="code", mode="javascript", style="display: none;").
      require([
        "jquery",
        "../lib-shared/shuffle"
      ], function($, shuffle) {
        $(function () {
          // Bind shuffle to the client side form.
          $("form#client").submit(function () {
            var input = $("form#client #input").val(),
              $output = $("form#client #output");

            $output.text(shuffle(input).join(", "));
            return false;
          });
        });
      });
    //-

  section.slide#parting
    :markdown
      ## Parting Thoughts

      At Curiosity Media, we use RequireJS for shared code for:

      * Input validation
      * Internationalization
      * Error handling

      Beyond this, RequireJS offers a **lot** more functionality than we've
      seen here today for managing your entire frontend asset collection.


  section.slide#conclusion
    h2 Thanks!

    div
      strong slides
      | :&nbsp;
      a(href="http://ryan-roemer.github.com/nodedc-requirejs-talk")
        | bit.ly/nodedc-requirejs
    div
      strong code
      | :&nbsp;
      a(href="https://github.com/ryan-roemer/nodedc-requirejs-talk")
        | bit.ly/nodedc-requirejs-code

    hr
      a(href="https://twitter.com/ryan_roemer") @ryan_roemer
      span(style="border-left: 1px solid #ccc; margin-left: 10px;") &nbsp;
      a(href="mailto:ryan@loose-bits.com") ryan@loose-bits.com

    div
      a(href="http://www.spanishdict.com/") SpanishDict.com
      |  is&nbsp;
      a(href="http://www.spanishdict.com/careers") hiring
      | !
